<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:fdg="clr-namespace:WpfDevKit.Controls.FilterDataGrid"
    xmlns:dia="clr-namespace:WpfDevKit.Controls.Dialogs"
    xmlns:conv="clr-namespace:WpfDevKit.Controls.Converters">
    
    <!--  GEOMETRY  -->
    <Geometry x:Key="FilterSetGeometry">
        M 1 1 L 15 1 L 9.5 9 L 9.5 14 L 6.5 16 L 6.5 9 Z
        M 11 9 H 17 L 14 14 Z
    </Geometry>
    <Geometry x:Key="FilterGeometry">
        M 1 1 L 15 1 L 8 9 Z
    </Geometry>
    <Geometry x:Key="FilterDeleteGeometry">
        M 1 1 L 15 1 L 9.5 9 L 9.5 14 L 6.5 16 L 6.5 9 Z
        M 11 13 L 13 11 L 11 9 L 12 8 L 14 10 L 16 8 L 17 9 L 15 11 L 17 13 L 16 14 L 14 12 L 12 14 Z
    </Geometry>
    <Geometry x:Key="GripSizeGeometry">
        M 0 9 L 2 9
        M 4 9 L 6 9
        M 8 9 L 10 9
        M 1 8 L 1 10
        M 5 8 L 5 10
        M 9 8 L 9 10
        M 4 5 L 6 5
        M 8 5 L 10 5
        M 5 4 L 5 6
        M 9 4 L 9 6
        M 8 1 L 10 1
        M 9 0 L 9 2
    </Geometry>
    <Geometry x:Key="MagnifierGeometry">
        M 9 18 C 4 18 0 14 0 9 S 4 0 9 0 S 18 4 18 9 S 14 18 9 18 Z
        M 9 3 C 6 3 3 6 3 9 S 6 15 9 15 S 15 12 15 9 S 12 3 9 3 Z
        M 19 15 C 18 17 17 18 15 19 L 21 25 L 25 21 L 19 15 Z
    </Geometry>
    <Geometry x:Key="DeleteGeometry">
        M 1 2 L 2 1 L 7 6 L 12 1 L 13 2 L 8 7 L 13 12 L 12 13 L 7 8 L 2 13 L 1 12 L 6 7 Z
    </Geometry>
    <Geometry x:Key="StartsWithGeometry">
        M 4.5 5.4 H 3.3 V 4.6 C 3.1 4.8 3 4.9 2.7 5.2 C 2.2 5.6 1.4 5.6 0.8 5.4 C 0.3 5.1 0 4.7 0 4.1 C 0 3.6 0.2 2.9 0.7 2.6 C 1.3 2.2 2 2.2 2.6 2.1 L 3.3 2 C 3.3 1.6 3.1 1.1 2.7 1 C 2.1 0.8 1.6 1 0.9 1.3 C 0.7 1.4 0.5 1.5 0.5 1.5 V 0.5 C 1.3 0 2.4 -0.1 3.3 0.1 C 3.8 0.3 4.2 0.7 4.4 1.2 C 4.5 1.8 4.5 2.4 4.5 3 Z
        M 3.3 2.8 C 2.8 2.9 2.2 2.9 1.7 3.1 C 1.4 3.2 1.2 3.3 1.2 3.6 C 1.1 4 1.2 4.4 1.6 4.6 C 2.2 4.8 2.9 4.5 3.2 3.9 C 3.3 3.6 3.3 3.2 3.3 2.8 Z
        M 12.8 3.6 L 11.3 3.8 L 12.3 5 L 11.6 5.5 L 10.8 4.2 L 10.1 5.5 L 9.3 5 L 10.3 3.8 L 8.9 3.6 L 9.2 2.8 L 10.5 3.3 L 10.4 1.8 H 11.3 L 11.1 3.3 L 12.4 2.8 Z
        M 8.7 3.6 L 7.2 3.8 L 8.2 5 L 7.5 5.5 L 6.7 4.2 L 6 5.5 L 5.2 5 L 6.2 3.8 L 4.8 3.6 L 5.1 2.8 L 6.4 3.3 L 6.3 1.8 H 7.2 L 7 3.3 L 8.4 2.8 Z
    </Geometry>
    <Geometry x:Key="ContainsGeometry">
        M 8.6 5.4 H 7.4 V 4.6 C 7.2 4.8 7.1 5 6.8 5.2 C 6.3 5.6 5.5 5.6 4.9 5.4 C 4.5 5.2 4.1 4.7 4.1 4.1 C 4.1 3.6 4.3 2.9 4.8 2.6 C 5.4 2.2 6.1 2.2 6.7 2.1 L 7.4 2 C 7.4 1.6 7.3 1.1 6.8 1 C 6.2 0.8 5.6 1 5 1.3 L 4.6 1.5 V 0.4 C 5.5 0 6.5 -0.1 7.4 0.1 C 7.9 0.3 8.4 0.7 8.5 1.2 C 8.6 1.8 8.6 2.4 8.6 3 Z 
        M 7.4 2.8 C 6.9 2.9 6.3 2.9 5.8 3.1 C 5.6 3.2 5.4 3.3 5.3 3.6 C 5.2 4 5.4 4.5 5.7 4.6 C 6.3 4.8 7 4.5 7.3 3.9 C 7.4 3.6 7.4 3.2 7.4 2.8 Z
        M 3.8 3.6 L 2.4 3.9 L 3.4 5 L 2.7 5.5 L 1.9 4.2 L 1.2 5.5 L 0.4 5 L 1.4 3.9 L 0 3.6 L 0.3 2.8 L 1.6 3.3 L 1.5 1.8 H 2.4 L 2.2 3.3 L 3.5 2.8 Z
        M 12.7 3.6 L 11.3 3.8 L 12.4 5 L 11.6 5.5 L 10.9 4.2 L 10.1 5.5 L 9.4 5 L 10.4 3.9 L 8.9 3.6 L 9.2 2.8 L 10.6 3.3 L 10.4 1.8 H 11.3 L 11.1 3.3 L 12.4 2.8 Z
    </Geometry>

    <!--  POPUP CONSTANTS  -->
    <sys:Double x:Key="PopupWidth">240</sys:Double>
    <sys:Double x:Key="PopupHeight">320</sys:Double>
    <sys:Boolean x:Key="StayOpen">False</sys:Boolean>

    <!--  BRUSHES  -->
    <SolidColorBrush x:Key="ButtonHighlightBrush" Color="#006197" />
    <SolidColorBrush x:Key="HeaderHighlightBrush" Color="#C8C7C7" />

    <!--  STYLES  -->
    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="FilterDataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Padding="2 0 8 0" Text="{Binding}" />
                        <Button Name="HeaderButton" Grid.Column="1" Height="18" Width="18" Cursor="Hand" Focusable="False">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="Transparent">
                                                    <Viewbox Width="16" Height="16" Stretch="Uniform">
                                                        <Path Name="HeaderButtonPath" />
                                                    </Viewbox>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="fdg:FilterBehavior.IsFiltered" Value="True">
                                                        <Setter TargetName="HeaderButtonPath" Property="Fill" Value="{StaticResource ButtonHighlightBrush}" />
                                                        <Setter TargetName="HeaderButtonPath" Property="Data" Value="{StaticResource FilterSetGeometry}" />
                                                    </Trigger>
                                                    <Trigger Property="fdg:FilterBehavior.IsFiltered" Value="False">
                                                        <Setter TargetName="HeaderButtonPath" Property="Fill" Value="{StaticResource HeaderHighlightBrush}" />
                                                        <Setter TargetName="HeaderButtonPath" Property="Data" Value="{StaticResource FilterGeometry}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="HeaderButtonPath" Property="Fill" Value="{StaticResource ButtonHighlightBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="HeaderButtonPath" Property="Fill" Value="{StaticResource HeaderHighlightBrush}" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding ElementName=HeaderPopup, Path=IsOpen}" Value="True">
                                                        <Setter TargetName="HeaderButtonPath" Property="Fill" Value="{StaticResource ButtonHighlightBrush}" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Popup Name="HeaderPopup" StaysOpen="{StaticResource StayOpen}" PlacementTarget="{Binding ElementName=HeaderButton}">
                            <fdg:FilterPopup FieldName="{Binding}" />
                        </Popup>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DIALOG WINDOW -->
    <DataTemplate DataType="{x:Type dia:DialogBase}" />

    <!--  BITMAPS  -->
    <BitmapImage x:Key="AlertImage"   UriSource="/Images/Alert.png" />
    <BitmapImage x:Key="DefaultImage" UriSource="/Images/Default.png" />
    <BitmapImage x:Key="ErrorImage"   UriSource="/Images/Error.png" />
    <BitmapImage x:Key="HelpImage"    UriSource="/Images/Help.png" />
    <BitmapImage x:Key="InfoImage"    UriSource="/Images/Info.png" />
    <BitmapImage x:Key="LogoImage"    UriSource="/Images/Logo.jpg" />
    <BitmapImage x:Key="OKImage"      UriSource="/Images/OK.png" />
    
    <!--  LOG CATEGORY TO COLOR MAP  -->
    <ResourceDictionary x:Key="LogCategoryBrushes">
        <SolidColorBrush x:Key="StartStop" Color="Blue" />
        <SolidColorBrush x:Key="Trace"     Color="Violet" />
        <SolidColorBrush x:Key="Debug"     Color="Green" />
        <SolidColorBrush x:Key="Info"      Color="Black" />
        <SolidColorBrush x:Key="Warning"   Color="Orange" />
        <SolidColorBrush x:Key="Error"     Color="Red" />
        <SolidColorBrush x:Key="Fatal"     Color="DarkRed" />
    </ResourceDictionary>

    <!--  CONVERTERS  -->
    <BooleanToVisibilityConverter     x:Key="BooleanToVisibility" />
    <FontWeightConverter              x:Key="StringToFontWeight" />
    <conv:StringToBrushConverter      x:Key="LogCategoryToBrush"  BrushMap="{StaticResource LogCategoryBrushes}" DefaultBrush="Black" />

    <!--  COLORS  -->
    <Color x:Key="Primary1"            >#002060</Color>
    <Color x:Key="Primary1Light"       >#8E94AE</Color>
    <Color x:Key="Primary1LightLight"  >#C7C9D6</Color>
    <Color x:Key="Primary2"            >#79A3DC</Color>
    <Color x:Key="Primary2Light"       >#BAD1ED</Color>
    <Color x:Key="Primary2LightLight"  >#CFDFF2</Color>
    <Color x:Key="Primary3"            >#B5AFB2</Color>
    <Color x:Key="Primary3Light"       >#D0CECE</Color>
    <Color x:Key="Primary3LightLight"  >#E7E6E6</Color>
    <Color x:Key="Secondary1"          >#F38E20</Color>
    <Color x:Key="Secondary1Light"     >#F8BB79</Color>
    <Color x:Key="Secondary1LightLight">#FBD8B1</Color>
    <Color x:Key="Secondary2"          >#00B798</Color>
    <Color x:Key="Secondary2Light"     >#85DBCB</Color>
    <Color x:Key="Secondary2LightLight">#B5E9E0</Color>
    <Color x:Key="Secondary3"          >#993366</Color>
    <Color x:Key="Secondary3Light"     >#CC98B3</Color>
    <Color x:Key="Secondary3LightLight">#E1C1D1</Color>

    <!--  BRUSHES  -->
    <SolidColorBrush x:Key="Primary1Brush"             Color="{StaticResource Primary1}" />
    <SolidColorBrush x:Key="Primary1BrushLight"        Color="{StaticResource Primary1Light}" />
    <SolidColorBrush x:Key="Primary1BrushLightLight"   Color="{StaticResource Primary1LightLight}" />
    <SolidColorBrush x:Key="Primary2Brush"             Color="{StaticResource Primary2}" />
    <SolidColorBrush x:Key="Primary2BrushLight"        Color="{StaticResource Primary2Light}" />
    <SolidColorBrush x:Key="Primary2BrushLightLight"   Color="{StaticResource Primary2LightLight}" />
    <SolidColorBrush x:Key="Primary3Brush"             Color="{StaticResource Primary3}" />
    <SolidColorBrush x:Key="Primary3BrushLight"        Color="{StaticResource Primary3Light}" />
    <SolidColorBrush x:Key="Primary3BrushLightLight"   Color="{StaticResource Primary3LightLight}" />
    <SolidColorBrush x:Key="Secondary1Brush"           Color="{StaticResource Secondary1}" />
    <SolidColorBrush x:Key="Secondary1BrushLight"      Color="{StaticResource Secondary1Light}" />
    <SolidColorBrush x:Key="Secondary1BrushLightLight" Color="{StaticResource Secondary1LightLight}" />
    <SolidColorBrush x:Key="Secondary2Brush"           Color="{StaticResource Secondary2}" />
    <SolidColorBrush x:Key="Secondary2BrushLight"      Color="{StaticResource Secondary2Light}" />
    <SolidColorBrush x:Key="Secondary2BrushLightLight" Color="{StaticResource Secondary2LightLight}" />
    <SolidColorBrush x:Key="Secondary3Brush"           Color="{StaticResource Secondary3}" />
    <SolidColorBrush x:Key="Secondary3BrushLight"      Color="{StaticResource Secondary3Light}" />
    <SolidColorBrush x:Key="Secondary3BrushLightLight" Color="{StaticResource Secondary3LightLight}" />

    <!--  STYLES  -->
    <Style TargetType="CheckBox" x:Key="DefaultCheckBox">
        <Setter Property="VerticalAlignment"        Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="ComboBox" x:Key="DefaultComboBox">
        <Setter Property="VerticalAlignment"        Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="RadioButton" x:Key="DefaultRadioButton">
        <Setter Property="VerticalAlignment"        Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBox" x:Key="LabelTextBox">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalAlignment"           Value="Center" />
        <Setter Property="TextWrapping"                Value="Wrap" />
        <Setter Property="IsReadOnly"                  Value="True" />
        <Setter Property="Background"                  Value="Transparent" />
        <Setter Property="BorderThickness"             Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBlock" x:Key="DefaultTextBlock">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment"   Value="Center" />
        <Setter Property="TextAlignment"       Value="Right" />
        <Setter Property="Padding"             Value="5" />
        <Setter Property="FontWeight"          Value="SemiBold" />
    </Style>
    <Style TargetType="TextBlock" x:Key="WrapTextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Padding"      Value="3 1" />
    </Style>
    <Style TargetType="TextBlock" x:Key="CenterTextBlock">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Padding"       Value="3 1" />
    </Style>
    <Style TargetType="TextBlock" x:Key="TabItemTextBlock">
        <Setter Property="Foreground"                     Value="DarkGray" />
        <Setter Property="HorizontalAlignment"            Value="Center" />
        <Setter Property="VerticalAlignment"              Value="Center" />
        <Setter Property="FocusVisualStyle"               Value="{x:Null}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Margin"                         Value="10 0 10 10" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="True">
                <Setter Property="Control.Foreground" Value="Black" />
                <Setter Property="Control.FontSize"   Value="20" />
                <Setter Property="Control.FontWeight" Value="SemiBold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="True">
                <Setter Property="Control.Foreground" Value="Black" />
                <Setter Property="Control.FontSize"   Value="20" />
                <Setter Property="Control.FontWeight" Value="SemiBold" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Border" x:Key="DefaultBorder">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius"    Value="5" />
    </Style>
    <Style TargetType="Border" x:Key="Primary1Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Primary1BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Primary1Brush}" />
    </Style>
    <Style TargetType="Border" x:Key="Primary2Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Primary2BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Primary2Brush}" />
    </Style>
    <Style TargetType="Border" x:Key="Primary3Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Primary3BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Primary3Brush}" />
    </Style>
    <Style TargetType="Border" x:Key="Secondary1Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Secondary1BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Secondary1Brush}" />
    </Style>
    <Style TargetType="Border" x:Key="Secondary2Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Secondary2BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Secondary2Brush}" />
    </Style>
    <Style TargetType="Border" x:Key="Secondary3Border" BasedOn="{StaticResource DefaultBorder}">
        <Setter Property="Background"      Value="{StaticResource Secondary3BrushLightLight}" />
        <Setter Property="BorderBrush"     Value="{StaticResource Secondary3Brush}" />
    </Style>
    <Style TargetType="Button" x:Key="RoundedButton">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="Button" x:Key="TabItemButton" BasedOn="{StaticResource RoundedButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToggleButton" x:Key="DefaultToggleButton">
        <Setter Property="FontFamily"                     Value="Segoe UI" />
        <Setter Property="FontSize"                       Value="13" />
        <Setter Property="Height"                         Value="Auto" />
        <Setter Property="Width"                          Value="Auto" />
        <Setter Property="Foreground"                     Value="DarkGray" />
        <Setter Property="HorizontalAlignment"            Value="Center" />
        <Setter Property="VerticalAlignment"              Value="Center" />
        <Setter Property="HorizontalContentAlignment"     Value="Center" />
        <Setter Property="VerticalContentAlignment"       Value="Center" />
        <Setter Property="FocusVisualStyle"               Value="{x:Null}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Margin"                         Value="10 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <TextBlock Text="{TemplateBinding Content}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                                        <Setter Property="Control.Foreground" Value="Black" />
                                        <Setter Property="Control.FontSize"   Value="20" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                                        <Setter Property="Control.Foreground" Value="Black" />
                                        <Setter Property="Control.FontSize"   Value="20" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem" x:Key="DefaultTabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <TextBlock Text="{TemplateBinding Header}" Style="{StaticResource TabItemTextBlock}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridCell" x:Key="DefaultDataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell" x:Key="CategoricalDataGridCell" BasedOn="{StaticResource DefaultDataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=Category, Converter={StaticResource CategoryToBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell" x:Key="CheckBoxDataGridCell" BasedOn="{StaticResource DefaultDataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="IsEditing" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridRow" x:Key="HoverHighlightDataGridRow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gainsboro" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGrid" x:Key="DefaultDataGrid">
        <Style.Resources>
            <SolidColorBrush 
                x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                Color="{x:Static SystemColors.HighlightColor}" />
        </Style.Resources>
        <Setter Property="AutoGenerateColumns"           Value="False" />
        <Setter Property="CanUserAddRows"                Value="False" />
        <Setter Property="CanUserDeleteRows"             Value="False" />
        <Setter Property="CanUserReorderColumns"         Value="True" />
        <Setter Property="CanUserResizeColumns"          Value="True" />
        <Setter Property="CanUserSortColumns"            Value="True" />
        <Setter Property="HeadersVisibility"             Value="Column" />
        <Setter Property="SelectionMode"                 Value="Single" />
        <Setter Property="SelectionUnit"                 Value="FullRow" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="IsReadOnly"                    Value="True" />
        <Setter Property="RowStyle"                      Value="{StaticResource HoverHighlightDataGridRow}" />
        <Setter Property="CellStyle"                     Value="{StaticResource DefaultDataGridCell}"/>
    </Style>
    <Style TargetType="DataGrid" x:Key="CategorialDataGrid" BasedOn="{StaticResource DefaultDataGrid}">
        <Setter Property="CellStyle" Value="{StaticResource CategoricalDataGridCell}" />
    </Style>

</ResourceDictionary>
